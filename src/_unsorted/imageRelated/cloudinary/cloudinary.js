/*
 * -----------------------------
 * File - cloudinary.js
 * Author: Chui Kin Ho, Chow Tsz Ching, Dingcheng Wang, Heung Tsz Kit, Tanja Impens
 * Date: May  5 2023, 11:08:51 PM
 * Version: 1.0
 * Description: Cloudinary related functions
 * -----------------------------
 */
// Require the cloudinary library
import cloudinaryLib from 'cloudinary';

const { v2: cloudinaryV2 } = cloudinaryLib;

cloudinaryV2.config({
    cloud_name: process.env.CLOUDINARY_NAME,
    api_key: process.env.CLOUDINARY_API_KEY,
    api_secret: process.env.CLOUDINARY_API_SECRET,
    secure: true
})

/* 
DESCRIPTION: Upload image to Cloudinary
@param:  Buffer object containing the image data. 
@return: url of where imagedata can be found
*/
export function uploadImage(imageData) {
    return new Promise((resolve, reject) => {
        cloudinaryV2.uploader.upload(imageData, (error, result) => {
        if (error) {
          reject(error);
        } else {
          resolve(result.secure_url);
        }
      });
    });
    /*
    Implementation info:
    -  new Promise is used to handle the asynchronous nature of the cloudinary.uploader.upload function
        --> A promise is an object that represents a value that may not be available yet, but will be resolved or rejected at some point in the future.
        --> The resolve and reject functions passed to the promise's constructor are used to fulfill or reject the promise respectively, depending on the outcome of the Cloudinary upload.
    - secure_url  is a unique URL generated by Cloudinary to access the uploaded image securely over HTTPS. The URL includes a signature, which ensures that only authorized users can access the resource.
    */
}

